<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>net9.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
    </PropertyGroup>

    <ItemGroup>
      <ProjectReference Include="..\ZEngine\ZEngine.csproj" />
    </ItemGroup>

    <ItemGroup>
      <Content Include="..\ZEngine\Content\**\*">
        <Link>Content\%(RecursiveDir)%(Filename)%(Extension)</Link>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
    </ItemGroup>

  <!-- macOS: copy native libs from Homebrew into output -->
  <Target Name="CopyNativeLibsMac" AfterTargets="Build" Condition="$([MSBuild]::IsOSPlatform('OSX'))">
    <ItemGroup>
      <NativeLibs Include="/opt/homebrew/lib/libSDL3*.dylib" Condition="Exists('/opt/homebrew/lib/libSDL3.dylib') Or Exists('/opt/homebrew/lib/libSDL3.0.dylib')" />
      <NativeLibs Include="/opt/homebrew/lib/libFAudio*.dylib" Condition="Exists('/opt/homebrew/lib/libFAudio.dylib') Or Exists('/opt/homebrew/lib/libFAudio.0.dylib')" />
    </ItemGroup>
    <Copy SourceFiles="@(NativeLibs)" DestinationFolder="$(OutDir)" SkipUnchangedFiles="true" Condition=" '@(NativeLibs)' != '' " />
    <!-- Ensure lib name expected by FNA exists -->
    <Copy SourceFiles="/opt/homebrew/lib/libSDL3.dylib" DestinationFiles="$(OutDir)libSDL3.0.dylib" Condition="Exists('/opt/homebrew/lib/libSDL3.dylib') And !Exists('$(OutDir)libSDL3.0.dylib')" />
  </Target>

</Project>


